### Exercise 1.7: Finalizing Your Python Program

Learning Goals

- Interact with a database using an object-relational mapper
- Build your final command-line Recipe application

Reflection Questions

- What is an Object Relational Mapper and what are the advantages of using one?

An Object-Relational Mapper (ORM) is a programming library or framework that facilitates the 
interaction between a relational database and object-oriented code. ORM tools bridge the gap between 
the object-oriented world of programming languages like Python, Java, or C# and the relational world 
of databases like MySQL, PostgreSQL, or Oracle.

Advantages:

Most notable advantage I see is being able to execute queries directly from my python code, with 
dependencies already built in via the ORM. It’s so much more readable too. Overall it just really 
educes the workload because the ORM handles so much of the database interactions, like database 
specific functions, so I can build the interactions into python syntax. This is also great because 
now I don’t to worry as much about database systems logic, and just focus on the app logic.

- By this point, you’ve finished creating your Recipe app. How did it go? What’s something in the 
app that you did well with? If you were to start over, what’s something about your app that you would 
change or improve?

Overall it went pretty well. This really just felt like a second iteration of what I built in 1.6, 
but with some cool new tools and I got to polish my code in a couple of ways that I think make it 
more intuitive. The ORM is really nice to work with so being able to rely on that for the database 
logic was pretty damn cool.

I think I did well with the user interaction. The app offers a very simple guide to perform functions 
within it, and I like that it will end operations once a certain task is completed, and revert back 
to the main menu. I think it’s much better this time around.

I don’t think I would change anything at this point. Perhaps I just lack creativity as to how to make 
it better but given the state at which I find it now, I’m happy with the overall performance of it. 
As for the code, I like where it is as well. I made adjustments that I felt would make the logic 
produce a more intuitive experience for the end user, so I wouldn’t change that either.

- Imagine you’re at a job interview. You’re asked what experience you have creating an app using 
Python. Taking your work for this Achievement as an example, draft how you would respond to this 
question.

I created a recipe application where the user can create and delete recipes from the command line; 
additionally, they can change a recipe based on its components, which are the ingredients and time 
to cook. Based on the inputs for each recipe, a difficulty score is applied to to each, automatically. 
If the user inputs an unexpected value, I have exception errors built into the logic of the app to 
guide the user towards acceptable inputs for each step. 

The app uses MySQL database hosted locally, and sqlalchemy to handle the database interactions from 
within my python logic.

- You’ve finished Achievement 1! Before moving on to Achievement 2, take a moment to reflect on your 
learning in the course so far:
    - What went well during this Achievement?
    
    I really liked this last exercise, it was the most fun because of the ORM, for me. Overall things 
    went well I would say. It’s been a while since I worked in python, and it’s always been an 
    enjoyable language to work with in the past, so I’m enjoying being able to do that again.
    
    - What’s something you’re proud of?
    
    I’m proud of how much I remember in terms of everything I’ve had to go through to overcome the 
    small bugs and obstacles that have come up throughout this achievement. I really like spending 
    time in the terminal, so getting to do that has been a blast and I’m kind of surprised by how 
    easily being in the terminal came back to me. I’m by no means an expert still, but there were 
    definitely a couple of moments in there where I stepped back and thought, I am kind of good at 
    this stuff, perhaps lol.
    
    - What was the most challenging aspect of this Achievement?
    
    I think the hardest thing for me that came up was a problem I had with a mysql depenedency. I 
    lost quite a bit of time trying to get everything to behave as excepted and couldn’t find the 
    answer for a while, but it was also kind of fun getting to look around at possible solutions and 
    poke the system, and probably break it even more, in the process. Ultimately, I did find the 
    solution, which was nuke it all and start over. Regardless of how time I lost on that journey, 
    it was ultimately pretty satisfying to wipe and rebuild to a system that worked without bugs.
    
    - Did this Achievement meet your expectations? Did it give you the confidence to start working 
    with your new Python skills?
    
    I would say it did meet my expectations. I think the coursework is well written, although perhaps 
    execessively comprehensive at times, it does a good job at highlighting the essentials and 
    providing enough examples and reference to start a build. 
    
    It did give me confidence to start working with python again. This was all quite different from 
    anything I’ve done before, so it’s been pretty cool to expand my python knowledge in a use case 
    that I hadn’t personally experienced. I’m excited to move onto Achievement 2.
    
    - What’s something you want to keep in mind to help you do your best in Achievement 2?
    
    When everything is breaking, backup, wipe, and rebuild sooner than later. Or do a stand-alone 
    test to compare the outcome. Make sure to make backups before. Start from the fundamentals, then g
    o up from there in terms of abstraction of the problem. Keep the end-user and user-friendliness 
    in your forethought when approaching the logic of a build. The end user is everything, and assume 
    they’re all 8 years old.
    

Well done—you’ve now completed the Learning Journal for Achievement 1. As you’ll have seen, a little 
metacognition can go a long way!